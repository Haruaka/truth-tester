name: Do we still build on all supported platforms?

on:
  schedule:
    # Every Sunday, run this action
    - cron: '0 0 * * 0'
jobs:
  # we have to separate out the mac build because github's image does not have rust installed
  mac-build:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Default to nightly
      run: rustup default nightly
    - name: Build default features
      run: cargo build --verbose
      continue-on-error: true
    - name: Build parsing
      run: cargo build --verbose --no-default-features --fetures parsing
      continue-on-error: true
    - name: Build tester
      run: cargo build --verbose --no-default-features --fetures tester
      continue-on-error: true
    - name: Build parallel
      run: cargo build --verbose --no-default-features --fetures parallel
      continue-on-error: true
    - name: Run tests
      run: cargo test --verbose
      continue-on-error: true
  os-builds:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Default to nightly
      run: rustup default nightly
    - name: Build default features
      run: cargo build --verbose
    - name: Build parsing
      run: cargo build --verbose --no-default-features --fetures parsing
    - name: Build tester
      run: cargo build --verbose --no-default-features --fetures tester
    - name: Build parallel
      run: cargo build --verbose --no-default-features --fetures parallel
    - name: Run tests
      run: cargo test --verbose
  wasm-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Add wasm Target
      run: rustup target add wasm32-unknown-unknown
    - name: Default to nightly
      run: rustup default nightly
    - name: Build for wasm
      run: cargo build --verbose --target wasm32-unknown-unknown
  webview-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Add wasm Target
      run: rustup target add wasm32-unknown-unknown
    - name: Default to nightly
      run: rustup default nightly
    - name: Build for wasm
      run: cd docs/truth-tester-webview && cargo build --verbose --target wasm32-unknown-unknown
